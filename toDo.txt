A simple place to plan out what features need built out. 

**USER STORIES**

As a user I want my birth certificate to be an nft so I can never lose it.

As a administrator I want to reserve access to change location and voting status to admins only so no unauthorized users change data.

As a developer I would like the contract to be upgradeable so I can make future changes.

As a state I want a way to use the birth certificate as a verification method for voting so the only eligible voter can vote

As a delegate I want to be able to make proposal that can be voted so people know what its all about and can decide to or not to execute it 

As a user I want a way to delegate my vote to a delegate so they can vote on my behalf

As a user I want to be able to see upcoming proposals so I know when to vote.

As a user I want to be able to see past votes so I know what passed or did not.

**NFT requirements**
Hold data mapped to id with dob, hospital location, location, and voter elgibility

function to return data as view 

**Voting contract**

    Copy and modify existing contract

    allow proposal to be submitted by verified 
      check if proposal is submitted by approved address
      struct mapped like so mapping(string title => proposal( string body, unit256 voteEndDate, unit256 yes votes, unit256 no votes))
      args title, body, vote date
    
    checkIfElgible
      Check if nft holder && age && status

    voteOnProposal
      check if voter is eligible && voting is still open
      args string title boolean vote or string vote to allow abstain

    viewProposal(string title)
      return proposals

    
      

**client side**

    Form for entering data that calls mint function from nft 
    Call address from connection

